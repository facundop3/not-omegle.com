{"version":3,"sources":["Components/SipleModal.js","Components/CreateJoin.js","usePeer.js","Components/CreateRoom.js","API.js","Components/JoinRoom.js","App.js","serviceWorker.js","index.js"],"names":["SimpleModal","props","showModal","isInitiator","hideModal","handlerAcept","react_default","a","createElement","Modal_default","size","show","onHide","aria-labelledby","Dialog","Header","closeButton","Title","Body","Footer","Button_default","variant","onClick","CentrateContent","styled","div","_templateObject","CreateJoin","initiator","toggleIsInitiator","_useState","useState","_useState2","Object","slicedToArray","modalIsVisible","setModalIsVisible","className","ev","SipleModal","usePeer","yourId","_useState3","_useState4","messagesList","_useState5","Peer","trickle","_useState6","peer","setPeer","useEffect","navigator","getUserMedia","video","audio","stream","err","console","log","CreateRoom","videoTag","createRoom","socketId","on","data","decodedMessage","TextDecoder","decode","prev","concat","toConsumableArray","current","srcObject","play","setVideoSource","InputGroup_default","Prepend","FormControl_default","aria-describedby","readOnly","value","socket","openSocket","API","suscribeToRoomConnectionData","callback","connectionData","emit","connectToRoom","roomId","getSocketId","id","JoinRoom","inputValue","setInputValue","handleSubmit","preventDefault","onSubmit","onChange","target","Append","App","setIsInitiator","useRef","webcamAccess","setWebcamAccess","setRoomId","logRoomConnectionData","Components_CreateJoin","Components_CreateRoom","videTag","Components_JoinRoom","width","height","ref","Boolean","window","location","hostname","match","library","add","faTimes","faPaperPlane","faWindowMinimize","faSearch","faUserAstronaut","faFrownOpen","faSquare","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cc650402.chunk.js","sourcesContent":["import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\n\nconst SimpleModal = props => {\n  const { showModal, isInitiator, hideModal, handlerAcept } = props;\n  const aceptModal = () => {\n    handlerAcept(isInitiator);\n    hideModal();\n  };\n  return (\n    <Modal\n      size=\"sm\"\n      show={showModal}\n      onHide={hideModal}\n      aria-labelledby=\"example-modal-sizes-title-sm\"\n    >\n      <Modal.Dialog show={showModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>\n            {isInitiator ? \"Creating videocall room\" : \"Joining videocall room\"}\n          </Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          {isInitiator ? (\n            <p>\n              In order to create the videocall room we are going to reques\n              access to your webcam and mic\n            </p>\n          ) : (\n            <p>\n              In order to join the a videocall room we are going to reques\n              access to your webcam and mic\n            </p>\n          )}\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={hideModal}>\n            Cancel\n          </Button>\n          <Button variant=\"primary\" onClick={aceptModal}>\n            Acept\n          </Button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    </Modal>\n  );\n};\n\nexport default SimpleModal;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"react-bootstrap/Button\";\n\nimport SimpleModal from \"./SipleModal\";\n\nconst CentrateContent = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CreateJoin = props => {\n  const { handlerAcept, initiator, toggleIsInitiator } = props;\n  const [modalIsVisible, setModalIsVisible] = useState(false);\n  const handleCreateClick = ev => {\n    setModalIsVisible(true);\n    toggleIsInitiator(true);\n  };\n  const handleJoinClick = ev => {\n    toggleIsInitiator(false);\n    setModalIsVisible(true);\n  };\n  const hideModal = () => {\n    setModalIsVisible(false);\n  };\n  return (\n    <div>\n      <CentrateContent>\n        <Button\n          className=\"btn btn-primary ml-1\"\n          onClick={handleCreateClick}\n          variant=\"primary\"\n        >\n          Cereate a videochat room\n        </Button>\n        <Button\n          className=\"btn btn-success ml-1\"\n          onClick={handleJoinClick}\n          variant=\"primary\"\n        >\n          Join a videochat room\n        </Button>\n      </CentrateContent>\n      <SimpleModal\n        handlerAcept={handlerAcept}\n        showModal={modalIsVisible}\n        isInitiator={initiator}\n        toggleIsInitiator={toggleIsInitiator}\n        hideModal={hideModal}\n      />\n    </div>\n  );\n};\n\nexport default CreateJoin;\n","import { useState, useEffect } from \"react\";\nimport Peer from \"simple-peer\";\n\nfunction usePeer(initiator) {\n  const [yourId, setYourId] = useState(\"\");\n  const [messagesList, setMessagesList] = useState([]);\n  const [peer, setPeer] = useState(\n    new Peer({\n      initiator,\n      trickle: false\n    })\n  );\n  useEffect(() => {\n    navigator.getUserMedia(\n      { video: true, audio: true },\n      function(stream) {\n        setPeer(\n          new Peer({\n            initiator,\n            trickle: false,\n            stream\n          })\n        );\n      },\n      function(err) {\n        console.log(\"Webrtc not supported on current browser\", err);\n      }\n    );\n  }, [initiator]);\n\n  return {\n    yourId,\n    messagesList,\n    peer\n  };\n}\n\nexport default usePeer;\n","import React, { useEffect, useState } from \"react\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Button from \"react-bootstrap/Button\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport usePeer from \"../usePeer\";\n\nconst CreateRoom = props => {\n  const { initiator, videoTag, createRoom, socketId } = props;\n  const { peer } = usePeer(initiator);\n  const setVideoSource = stream => {\n    videoTag.current.srcObject = stream;\n    videoTag.current.play();\n  };\n\n  useEffect(() => {\n    peer.on(\"signal\", data => {\n      createRoom(data);\n    });\n\n    peer.on(\"data\", data => {\n      const decodedMessage = new TextDecoder(\"utf-8\").decode(data);\n      console.log(prev => [...prev, decodedMessage]);\n    });\n    peer.on(\"stream\", stream => {\n      setVideoSource(stream);\n    });\n  }, [peer]);\n\n  return (\n    <InputGroup className=\"mb-3\">\n      <InputGroup.Prepend>\n        <Button variant=\"outline-secondary\">Room ID</Button>\n      </InputGroup.Prepend>\n      <FormControl aria-describedby=\"basic-addon1\" readOnly value={socketId} />\n    </InputGroup>\n  );\n};\n\nexport default CreateRoom;\n","import openSocket from \"socket.io-client\";\nconst socket = openSocket(\"http://localhost:3030\");\n\n/**\n *  Suscribes to room-connection-data and excecutes the callback function\n * @param {function} callback\n */\nfunction suscribeToRoomConnectionData(callback) {\n  socket.on(\"room-connection-data\", connectionData => callback(connectionData));\n}\n\n/**\n * Sends videocall creator connection data to be stored on server memory\n * @param {Object} data Connection data of the videocall creator\n */\nfunction createRoom(data) {\n  socket.emit(\"create-room-data\", data);\n}\n/**\n *  Gets the connection data of a videocall by ID\n * @param {String} roomId\n */\nfunction connectToRoom(roomId) {\n  socket.emit(\"connect-to-room\", roomId);\n}\n\nfunction getSocketId() {\n  return socket.id;\n}\n\nexport default {\n  suscribeToRoomConnectionData,\n  createRoom,\n  connectToRoom,\n  getSocketId\n};\n","import React, { useState } from \"react\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Button from \"react-bootstrap/Button\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport usePeer from \"../usePeer\";\nimport API from \"../API\";\n\nconst JoinRoom = props => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const { peer } = usePeer(false);\n  const handleChange = ev => {\n    setInputValue(ev.target.value);\n  };\n  const handleSubmit = ev => {\n    ev.preventDefault();\n    if (inputValue) {\n      console.log(\"Join room\");\n      console.log(inputValue);\n      API.connectToRoom(inputValue);\n    } else {\n      console.log(\"No value :S\");\n    }\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Prepend>\n          <Button variant=\"outline-secondary\">Room ID</Button>\n        </InputGroup.Prepend>\n        <FormControl\n          aria-describedby=\"basic-addon1\"\n          value={inputValue}\n          onChange={handleChange}\n        />\n        <InputGroup.Append>\n          <Button variant=\"outline-primary\" onClick={handleSubmit}>\n            Join room\n          </Button>\n        </InputGroup.Append>\n      </InputGroup>\n    </form>\n  );\n};\n\nexport default JoinRoom;\n","import React, { useState, useEffect, useRef } from \"react\";\n\nimport CreateJoin from \"./Components/CreateJoin\";\nimport CreateRoom from \"./Components/CreateRoom\";\nimport JoinRoom from \"./Components/JoinRoom\";\nimport API from \"./API\";\n\nfunction App() {\n  const [initiator, setIsInitiator] = useState(true);\n  const videoTag = useRef(null);\n  const [webcamAccess, setWebcamAccess] = useState(false);\n  const [roomId, setRoomId] = useState(\"test\");\n  const logRoomConnectionData = connectionData => {\n    console.log(connectionData);\n  };\n  const toggleIsInitiator = isInitiator => {\n    setIsInitiator(isInitiator);\n  };\n  const handlerAcept = isInitiator => {\n    setIsInitiator(isInitiator);\n    setWebcamAccess(true);\n  };\n  useEffect(() => {\n    API.suscribeToRoomConnectionData(logRoomConnectionData);\n    setRoomId(API.getSocketId());\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h1 className=\"text-center\">Simle peer to peer videocall</h1>\n      </header>\n      <br />\n      <CreateJoin\n        handlerAcept={handlerAcept}\n        initiator={initiator}\n        toggleIsInitiator={toggleIsInitiator}\n      />\n      <br />\n      {webcamAccess &&\n        (initiator ? (\n          <CreateRoom\n            initiator={initiator}\n            videTag={videoTag}\n            createRoom={API.createRoom}\n            socketId={roomId}\n          />\n        ) : (\n          <JoinRoom />\n        ))}\n      <video width=\"750\" height=\"500\" ref={videoTag} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n// Font Awesome stuff\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n  faTimes,\n  faPaperPlane,\n  faWindowMinimize,\n  faSearch,\n  faUserAstronaut,\n  faFrownOpen,\n  faSquare\n} from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(\n  faTimes,\n  faPaperPlane,\n  faWindowMinimize,\n  faSearch,\n  faUserAstronaut,\n  faFrownOpen,\n  faSquare\n);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}